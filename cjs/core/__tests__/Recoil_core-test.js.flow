/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 * @format
 * @oncall recoil
 */
'use strict';

const {
  getRecoilTestFn,
} = require('recoil-shared/__test_utils__/Recoil_TestingUtils');

let a, atom, store, nullthrows, getNodeLoadable, setNodeValue, RecoilEnv, gkx;

const testRecoil = getRecoilTestFn(() => {
  const {
    makeStore,
  } = require('recoil-shared/__test_utils__/Recoil_TestingUtils');

  atom = require('../../recoil_values/Recoil_atom');
  nullthrows = require('recoil-shared/util/Recoil_nullthrows');
  ({getNodeLoadable, setNodeValue} = require('../Recoil_FunctionalCore'));

  a = atom<number>({key: 'a', default: 0}).key;

  store = makeStore();

  RecoilEnv = require('../Recoil_RecoilEnv');
  gkx = require('recoil-shared/util/Recoil_gkx');
});

testRecoil('read default value', () => {
  expect(getNodeLoadable(store, store.getState().currentTree, a)).toMatchObject(
    {
      state: 'hasValue',
      contents: 0,
    },
  );
});

testRecoil('setNodeValue returns written value when writing atom', () => {
  const writes = setNodeValue(store, store.getState().currentTree, a, 1);
  expect(nullthrows(writes.get(a)).contents).toBe(1);
});

describe('gatekeepers', () => {
  testRecoil('environment propagates GKs', () => {
    expect(gkx('recoil_test_gk')).toBe(false);
    RecoilEnv.RECOIL_GKS_ENABLED_UNSTABLE = ['recoil_test_gk'];
    expect(gkx('recoil_test_gk')).toBe(true);
    RecoilEnv.RECOIL_GKS_ENABLED_UNSTABLE = [];
    expect(gkx('recoil_test_gk')).toBe(false);
  });

  describe('support for process.env.RECOIL_GKS_ENABLED_UNSTABLE', () => {
    const originalProcessEnv = process.env;
    beforeEach(() => {
      process.env = {...originalProcessEnv};
      process.env.RECOIL_GKS_ENABLED_UNSTABLE =
        'recoil_test_gk1,recoil_test_gk2';
    });

    afterEach(() => {
      process.env = originalProcessEnv;
    });

    testRecoil('environment propagates GKs', () => {
      expect(gkx('recoil_test_gk1')).toBe(true);
      expect(gkx('recoil_test_gk2')).toBe(true);
    });
  });
});
